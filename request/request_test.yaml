## This is the request file format.
## tab characters are NOT allowed.
## It is best to always include a languageISO or bibleId in the dataset_name

# These six fields are required
is_new: yes # Answer yet to start with a clean project
dataset_name: Test1_ATIWBT # Use a unique name to keep runs separate, or reuse a name to add to a prior run
bible_id: ATIWBT
username: GaryNGriswold
email: gary@shortsands.com
output_file: myRun.json # Allowed file types are .json, .csv, .sqlite, and .html for compare tasks
alt_language: # To force the use of an alternate language, use this field
# The remaining configuration choices are all optional, but something must be selected in order for some processing to be done.

testament: # Choose one or both
  nt: yes # Mark Yes for entire New Testament
  nt_books: [] # To process part of the NT, list specific USFM NT book codes, e.g. [MAT,MRK,LUK,JHN]
  ot: # Mark Yes for entire Old Testament
  ot_books: [] # To process part of the OT, list specific USFM OT book codes, e.g. [GEN,EXO,LEV,NUM]
# Default: nt

audio_data: # Choose one of the following
  bible_brain: # If Bible Brain put Yes by the desired type
    mp3_64: yes # Mark Yes for 64 bit MP3
    mp3_16: # Mark Yes for 16 bit MP3
    opus: # Mark Yes for OPUS
  file: # e.g. /{directory}/{mediaId}/*.usx Note: include twice for OT and NT
  aws_s3: # e.g. s3://{bucket}/audio/{bibleId}/{mediaId}/*.mp3  Note: include twice for OT and NT
  post: # e.g. {mediaId}_{A/Bseq}_{book}_{chapter}_{verse}-{chapter_end}_{verse_end}, use detail as needed
  no_audio: # If no audio put Yes here
# Default:  no_audio

text_data: # Choose one of the following
  bible_brain: # If Bible Brain put Yes by the desired type
    text_usx_edit: # Mark Yes, for USX with text not in audio removed
    text_plain_edit: # Mark Yes, for plain_text with headings added to match audio
    text_plain: # Mark Yes, for DBP plain_text
  file: # e.g. /{directory}/{mediaId}/*.usx Note: include twice for OT and NT
  aws_s3: # e.g. s3://{bucket}/text/{bibleId}/{mediaId}/*.usx  Note: include twice for OT and NT
  post: # {mediaId}_{A/Bseq}_{book}_{chapter}_{verse}-{chapter_end}_{verse_end}, use detail as needed
  no_text: # If there is no text yes here
# Default: no_text

timestamps: # If timestamps are needed, mark Yes by source
  bible_brain: # Use is not recommended, because the last verse has no ending timestamp.
  aeneas:  # This will cause aeneas to compute timestamps, audio and text are both required
  ts_bucket: # This will pull timestamp data from Sandeep's bucket
  mms_fa_verse: # This will compute timestamps using mms forced alignment
  mms_align: # This is a second method for computing timestamps.  It also provides a score for each word and verse.
  no_timestamps: # If time stamps are not needed
# Default: no_timestamps

speech_to_text: # If STT is source Yes by desired type
  mms_asr: # This is Meta's MMS Speech to Text model
  whisper: # This is OpenAIâ€™s Speech to Text model
    model: # If using Whisper, choose one of the model sizes by marking it Yes
      large:
      medium:
      small:
      base:
      tiny:
  no_speech_to_text: #
# Default: no_speech_to_text

detail: # Choose word or both
  lines: # Mark yes to process script lines
  words: # Mark yes to process individual words
# Default: lines

audio_encoding: # If audio encoding is needed, mark Yes by the method
  mfcc:
  no_encoding:
# Default: no_encoding

text_encoding:
  fast_text:
  no_encoding:
# Default: no_encoding

compare: # To do a compare, put the names of the two projects here
  base_dataset:  # Name of dataset to compare to this one
## compare entries go here
## edit check, the two projects must exist, and both must have a text source.
  compare_settings: # Mark yes, all settings that apply
    lower_case: # Mark yes here to move to lower case
    remove_prompt_chars: # Mark yes here to remove prompt chars found in audio transcript
    remove_punctuation: # Mark yes here to remove punctuation
    double_quotes: # Choose no more than one
      remove: # Mark yes here to remove double quotes
      normalize: # Mark yes here to normalize to ascii double quote
    apostrophe: # Choose no more than one
      remove: # Mark yes here to remove apostrophes
      normalize: # Mark yes here to normalize to ascii apostrophe
    hyphen: # Choose no more than one
      remove: # Mark yes here to remove Hyphen
      normalize: # Mark yes here to normalize to ascii hyphen
    diacritical_marks: # Choose no more than one
      remove: # Mark yes here to remove diacritical marks
      normalize_nfc: # Mark yes here for Normalization Form Composition
      normalize_nfd: # Mark yes here for Normalization Form Decomposition
      normalize_nfkc: # Mark yes here for Normalization Form Compatibility Composition
      normalize_nfkd: # Mark yes here for Normalization Form Compatibility Decomposition
